async function b({endpoint:u,setError:n,setSuccess:i,setLoading:l,method:f="GET",data:t=null,returnType:r="json",successMessage:s=null,onError:a=null}){const o={method:f,credentials:"include"};if(f==="POST")if(t instanceof FormData)o.body=t;else if(typeof t=="object")o.headers={"Content-Type":"application/json"},o.body=JSON.stringify(t);else throw new Error("Invalid data type: Must be an object or FormData.");l(!0);try{const e=await fetch(u,o);if(!e.ok){const c=await e.json();throw n(c.error_message),i(null),setTimeout(()=>{n([])},8e3),a&&a(),new Error(c.error_message.join(", "))}const w=r==="blob"?await e.blob():r==="text"?await e.text():r==="arrayBuffer"?await e.arrayBuffer():await e.json();return s&&i(s),n([]),setTimeout(()=>{i(null)},8e3),w}catch(e){throw console.error(`Fetch request failed: ${e.message}`),a&&a(),e}finally{l(!1)}}export{b as f};
